[{"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\index.js":"1","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\reportWebVitals.js":"2","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\App.js":"3","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\store\\reducer.js":"4","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\store\\actioncreator.js":"5","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\store\\actiontypes.js":"6","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\server\\firebase.js":"7","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\server\\peerConnection.js":"8","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\MainScreen\\MainScreen.component.js":"9","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Participants\\Participants.component.js":"10","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\MeetingFooter\\MeetingFooter.component.js":"11","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Participants\\Participant\\Participant.component.js":"12","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Shared\\Card\\Card.component.js":"13","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Kyathi\\Home.js":"14","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Forms\\Registration.js":"15","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Forms\\Mainform.js":"16","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Kyathi\\Button.js":"17","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Kyathi\\Slider.js":"18","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Kyathi\\Date.js":"19","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Forms\\Newform.js":"20","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Forms\\LoginForm.js":"21","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\messages\\Wrongregister.js":"22","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\messages\\Registermessage.js":"23","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\messages\\Emailvalid.js":"24","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Kyathi\\Meeting.js":"25","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\messages\\Wrongemail.js":"26","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\messages\\Wrongpassword.js":"27","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Header.js":"28","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\UserVideo\\Adminpage.js":"29","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\UserVideo\\Userside.js":"30","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\UserVideo\\RegistrationUser.js":"31","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\UserVideo\\MainUserForm.js":"32","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\UserVideo\\NewformUser.js":"33","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\UserVideo\\LoginFormUser.js":"34","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Kyathi\\Join.js":"35","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Forms\\Adduser.js":"36","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\MainScreen\\Welcome.js":"37","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\messages\\Mailsent.js":"38"},{"size":840,"mtime":1672722844017,"results":"39","hashOfConfig":"40"},{"size":375,"mtime":1672719989195,"results":"41","hashOfConfig":"40"},{"size":3702,"mtime":1672897579153,"results":"42","hashOfConfig":"40"},{"size":3743,"mtime":1672719989195,"results":"43","hashOfConfig":"40"},{"size":999,"mtime":1672719989195,"results":"44","hashOfConfig":"40"},{"size":296,"mtime":1672719989195,"results":"45","hashOfConfig":"40"},{"size":705,"mtime":1672976368636,"results":"46","hashOfConfig":"40"},{"size":3145,"mtime":1672719989195,"results":"47","hashOfConfig":"40"},{"size":4661,"mtime":1672917704333,"results":"48","hashOfConfig":"40"},{"size":3049,"mtime":1672829095134,"results":"49","hashOfConfig":"40"},{"size":2955,"mtime":1672919735455,"results":"50","hashOfConfig":"40"},{"size":1321,"mtime":1672746549921,"results":"51","hashOfConfig":"40"},{"size":163,"mtime":1672719989195,"results":"52","hashOfConfig":"40"},{"size":2495,"mtime":1672828674296,"results":"53","hashOfConfig":"40"},{"size":9347,"mtime":1672979099248,"results":"54","hashOfConfig":"40"},{"size":689,"mtime":1667965968717,"results":"55","hashOfConfig":"40"},{"size":968,"mtime":1672828243021,"results":"56","hashOfConfig":"40"},{"size":1543,"mtime":1672810883641,"results":"57","hashOfConfig":"40"},{"size":432,"mtime":1665743999301,"results":"58","hashOfConfig":"40"},{"size":1104,"mtime":1672808393054,"results":"59","hashOfConfig":"40"},{"size":6873,"mtime":1672980338427,"results":"60","hashOfConfig":"40"},{"size":503,"mtime":1667217430967,"results":"61","hashOfConfig":"40"},{"size":415,"mtime":1665727622789,"results":"62","hashOfConfig":"40"},{"size":571,"mtime":1666674628308,"results":"63","hashOfConfig":"40"},{"size":413,"mtime":1672809962081,"results":"64","hashOfConfig":"40"},{"size":490,"mtime":1667215195337,"results":"65","hashOfConfig":"40"},{"size":511,"mtime":1667215210387,"results":"66","hashOfConfig":"40"},{"size":447,"mtime":1672727340300,"results":"67","hashOfConfig":"40"},{"size":512,"mtime":1672743741518,"results":"68","hashOfConfig":"40"},{"size":766,"mtime":1672727432481,"results":"69","hashOfConfig":"40"},{"size":9320,"mtime":1669885671811,"results":"70","hashOfConfig":"40"},{"size":728,"mtime":1669891552257,"results":"71","hashOfConfig":"40"},{"size":1070,"mtime":1669888318227,"results":"72","hashOfConfig":"40"},{"size":7389,"mtime":1669885903798,"results":"73","hashOfConfig":"40"},{"size":1384,"mtime":1672909798341,"results":"74","hashOfConfig":"40"},{"size":2693,"mtime":1672912985834,"results":"75","hashOfConfig":"40"},{"size":351,"mtime":1672830041829,"results":"76","hashOfConfig":"40"},{"size":350,"mtime":1672912911576,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1xw2sr6",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\index.js",[],["158","159"],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\reportWebVitals.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\App.js",["160","161","162","163","164"],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\store\\reducer.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\store\\actioncreator.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\store\\actiontypes.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\server\\firebase.js",["165"],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\server\\peerConnection.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\MainScreen\\MainScreen.component.js",["166","167","168"],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Participants\\Participants.component.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\MeetingFooter\\MeetingFooter.component.js",["169","170","171","172"],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Participants\\Participant\\Participant.component.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Shared\\Card\\Card.component.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Kyathi\\Home.js",["173"],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Forms\\Registration.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Forms\\Mainform.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Kyathi\\Button.js",["174"],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Kyathi\\Slider.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Kyathi\\Date.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Forms\\Newform.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Forms\\LoginForm.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\messages\\Wrongregister.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\messages\\Registermessage.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\messages\\Emailvalid.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Kyathi\\Meeting.js",["175","176"],"import './Meeting.css';\r\nimport LinkIcon from '@mui/icons-material/Link';\r\nimport {NavLink} from 'react-router-dom';\r\nimport React,{useContext} from 'react';\r\n\r\n\r\nfunction Meeting(props){\r\n    \r\n    return(\r\n        <div className='meet' onClick={props.close}>\r\n            <LinkIcon style={{marginTop:'15px'}} /><div><h1>Create a Instant Meeting</h1></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Meeting;\r\n","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\messages\\Wrongemail.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\messages\\Wrongpassword.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Header.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\UserVideo\\Adminpage.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\UserVideo\\Userside.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\UserVideo\\RegistrationUser.js",["177"],"import '../Forms/LoginForm.css';\r\nimport '../Forms/Registration.css';\r\nimport {NavLink,useHistory} from 'react-router-dom';\r\nimport React,{useState,useRef,useEffect} from 'react';\r\nimport logo1 from '../../assets/image.png';\r\nimport Registermessage from '../messages/Registermessage'\r\nimport Emailvalid from '../messages/Emailvalid';\r\nimport Header from '../Header';\r\nimport Wrongregister from '../messages/Wrongregister';\r\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\r\n\r\n\r\n\r\n\r\nfunction RegistrationUser(props){\r\n  const history=useHistory();\r\n  const emailRef = useRef();\r\n  const passwordRef3 = useRef();\r\n  const usernameref=useRef();\r\n  const confirmpasswordRef=useRef();\r\n  const [Rmessage,setRmessage]=useState(false);\r\n  const[emailisValid,setemailisValid]=useState(false);\r\n  const[errorregister,seterrorregister]=useState();\r\n  const[wrongregister,setwrongregister]=useState();\r\n  const[passwordlength,setpasswordlength]=useState();\r\n  const[passworduppercase,setpassworduppercase]=useState();\r\n  const[passwordlowercase,setpasswordlowercase]=useState();\r\n  const[passwordnumber,setpasswordnumber]=useState();\r\n  const[passwordmatch,setpasswordmatch]=useState();\r\n  const[formisValid,setformisValid]=useState(false);\r\n  const [passwordspecial, setpasswordspecial] = useState();\r\n  const[passwordcondition,setpasswordcondition]=useState();\r\n  const[passwordcondition1,setpasswordcondition1]=useState();\r\n  \r\n  const handler=()=>{\r\n    setRmessage(false);\r\n    history.push('/login')\r\n  };\r\n\r\n  const emailHandler=()=>{\r\n    setemailisValid(false);\r\n  };\r\n  \r\n  const passwordenterhandler3=()=>{\r\n    const enteredpassword1=passwordRef3.current.value;\r\n      if(enteredpassword1.trim().length>=8){\r\n        setpasswordlength(true);\r\n      }else\r\n      if(enteredpassword1.trim().length<8){setpasswordlength(false)}\r\n      if(enteredpassword1.match(/[A-Z]/)){\r\n        setpassworduppercase(true);\r\n      }\r\n      else {\r\n        setpassworduppercase(false);\r\n      }\r\n      if(enteredpassword1.match(/[a-z]/)){\r\n        setpasswordlowercase(true);\r\n      }\r\n      else{\r\n        setpasswordlowercase(false);\r\n      }\r\n      if(enteredpassword1.match(/[0-9]/)){\r\n        setpasswordnumber(true);\r\n      }\r\n      else{\r\n        setpasswordnumber(false);\r\n      }\r\n      if(enteredpassword1.match(/[^A-Za-z0-9-' ']/i)){\r\n        setpasswordspecial(true);\r\n      }\r\n      else{\r\n        setpasswordspecial(false);\r\n      }\r\n  }\r\n  const confirmpasswordhandler=()=>{\r\n    const confirmpassword=confirmpasswordRef.current.value;\r\n    const enteredpassword1=passwordRef3.current.value;\r\n    if(confirmpassword === enteredpassword1){\r\n      setformisValid(true);\r\n      setpasswordmatch(true);\r\n    }\r\n    else{\r\n      setformisValid(false);\r\n      setpasswordmatch(false);\r\n    }\r\n  }\r\n\r\n  const passwordconditions=()=>{\r\n    setpasswordcondition(false);\r\n    setpasswordcondition1(true);\r\n  }\r\n  const pswdconditions=()=>{\r\n    setpasswordcondition(true);\r\n    setpasswordcondition1(false);\r\n  }\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredEmail = emailRef.current.value;\r\n    const enteredpassword = passwordRef3.current.value;\r\n    const enteredUsername=usernameref.current.value;\r\n\r\n    if(enteredEmail.includes(\"@terralogic.com\")){\r\n      fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBERMyCRpzcfn_xn0o7_b464pVhJI2Y1RI\",\r\n        // \"http://127.0.0.1:8000/core/register/\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            username:enteredUsername,\r\n            email: enteredEmail,\r\n            password: enteredpassword,\r\n            returnSecureToken: true,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      ).then((res) => {\r\n        if (res.ok) {\r\n          setRmessage(true);\r\n        } else {\r\n          return res.json().then((data) => {\r\n            let errorMessage = \"Authentication failed!\";\r\n            if (data && data.error && data.error.message) {\r\n              errorMessage = data.error.message;\r\n            }\r\n            setRmessage(false);\r\n            seterrorregister(errorMessage);\r\n            if(errorregister === \"EMAIL_EXISTS\"){\r\n              setwrongregister(true);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }else{\r\n      setemailisValid(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    usernameref.current.focus();\r\n  }, []);\r\n\r\n  const validregisterHandler=()=>{\r\n    setwrongregister(false);\r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div>{<img className=\"logo1\" src={logo1} alt=\"logo1\" />}</div>\r\n      <div className=\"mainform\">\r\n        <form onSubmit={submitHandler}>\r\n          <h5 className=\"h5\">Registration for Terralogic Meet</h5>\r\n          <div className=\"login\">\r\n            <label htmlFor=\"text\">User Name</label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              id=\"username\"\r\n              ref={usernameref}\r\n            />\r\n          </div>\r\n          <div className=\"login\">\r\n            <label htmlFor=\"email\">Email Id</label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              required\r\n              ref={emailRef}\r\n            />\r\n          </div>\r\n          <div className=\"login1\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              required\r\n              ref={passwordRef3}\r\n              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,}$\"\r\n              onInput={passwordenterhandler3}\r\n              onClick={pswdconditions}\r\n            />\r\n          </div>\r\n          <div className=\"conditions\">\r\n            {passwordcondition ? (\r\n              <div>\r\n                <ul\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    marginTop: \"10px\",\r\n                    marginLeft: \"35px\",\r\n                  }}\r\n                >\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordlength ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Minimum 8 characters\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passworduppercase ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Aleast One Uppercase\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordlowercase ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Lowercase\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordnumber ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Number\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordspecial ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Special Character\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"login1\">\r\n            <label htmlFor=\"password\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              required\r\n              ref={confirmpasswordRef}\r\n              onInput={confirmpasswordhandler}\r\n              onClick={passwordconditions}\r\n            />\r\n            <div className=\"conditions\">\r\n            {passwordcondition1 ? (\r\n              <div>\r\n                <ul\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    marginTop: \"10px\",\r\n                    marginLeft: \"35px\",\r\n                  }}\r\n                >\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"25px\",\r\n                      color: passwordmatch ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Password Match\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          </div>\r\n          <div>\r\n            <button className=\"button1\" type=\"submit\" disabled={!formisValid}>\r\n              Register\r\n            </button>\r\n            <p className=\"lins4\">Already have an account ? </p>\r\n            <NavLink to=\"/login1\" style={{ textDecoration: \"none\" }}>\r\n              <p className=\"lin4\">Login</p>\r\n            </NavLink>\r\n          </div>\r\n        </form>\r\n        {Rmessage && <Registermessage click={handler} />}\r\n        {emailisValid && <Emailvalid email={emailHandler} />}\r\n        {wrongregister && (\r\n          <Wrongregister validregister={validregisterHandler} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationUser;\r\n\r\n\r\n\r\n\r\n        ","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\UserVideo\\MainUserForm.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\UserVideo\\NewformUser.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\UserVideo\\LoginFormUser.js",["178"],"import '../Forms/LoginForm.css';\r\nimport '../Forms/Registration.css';\r\nimport {NavLink,useHistory} from 'react-router-dom';\r\nimport React,{useState,useRef,useEffect} from 'react';\r\nimport Wrongemail from '../messages/Wrongemail';\r\nimport Wrongpassword from '../messages/Wrongpassword';\r\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\r\n\r\nfunction LoginFormUser(props){\r\n    const history=useHistory();\r\n    const[wrong1,setwrong1]=useState();\r\n    const[wrongemail2,setwrongemail2]=useState();\r\n    const[wrongpassword2,setwrongpassword2]=useState();\r\n    const[passwordlength,setpasswordlength]=useState();\r\n    const[passworduppercase,setpassworduppercase]=useState();\r\n    const[passwordlowercase,setpasswordlowercase]=useState();\r\n    const[passwordnumber,setpasswordnumber]=useState();\r\n    const [passwordspecial, setpasswordspecial] = useState();\r\n    const[passwordcondition,setpasswordcondition]=useState();\r\n    const emailInputRef1 = useRef();\r\n    const passwordInputRef1 = useRef();\r\n\r\n\r\n    // const loginHandler=()=>{\r\n    //   setIsLogin(false);\r\n    //   history.push('/after')\r\n    // };\r\n    const passwordenterhandler2=()=>{\r\n      const enteredpassword1=passwordInputRef1.current.value;\r\n        if(enteredpassword1.trim().length>=8){\r\n          setpasswordlength(true);\r\n        }else\r\n        if(enteredpassword1.trim().length<8){setpasswordlength(false)}\r\n        if(enteredpassword1.match(/[A-Z]/)){\r\n          setpassworduppercase(true);\r\n        }\r\n        else {\r\n          setpassworduppercase(false);\r\n        }\r\n        if(enteredpassword1.match(/[a-z]/)){\r\n          setpasswordlowercase(true);\r\n        }\r\n        else{\r\n          setpasswordlowercase(false);\r\n        }\r\n        if(enteredpassword1.match(/[0-9]/)){\r\n          setpasswordnumber(true);\r\n        }\r\n        else{\r\n          setpasswordnumber(false);\r\n        }\r\n        if(enteredpassword1.match(/[^A-Za-z0-9-' ']/i)){\r\n          setpasswordspecial(true);\r\n        }\r\n        else{\r\n          setpasswordspecial(false);\r\n        }\r\n    }\r\n    const submitHandler1 = (event) => {\r\n      event.preventDefault();\r\n  \r\n      const enteredEmail1 = emailInputRef1.current.value;\r\n      const enteredPassword1 = passwordInputRef1.current.value;\r\n      \r\n      \r\n      \r\n        fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBERMyCRpzcfn_xn0o7_b464pVhJI2Y1RI',\r\n      \r\n       {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          email: enteredEmail1,\r\n          password: enteredPassword1,\r\n          returnSecureToken: true,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (res.ok) {\r\n            // setIsLogin(true);\r\n            history.push('/after1')\r\n            return res.json();\r\n          } else {\r\n            return res.json().then((data) => {\r\n              let errorMessage = \"Authentication failed!\";\r\n              if (data && data.error && data.error.message) {\r\n                errorMessage = data.error.message;\r\n              }\r\n\r\n              throw new Error(errorMessage);\r\n            });\r\n          }\r\n        })\r\n        .then((data) => {\r\n          console.log(data);\r\n        })\r\n        .catch((err) => {\r\n          setwrong1(err.message);\r\n          if(wrong1 === \"EMAIL_NOT_FOUND\"){\r\n            setwrongemail2(true);\r\n          }\r\n          if(wrong1 === \"INVALID_PASSWORD\") {\r\n            setwrongpassword2(true)\r\n          }\r\n        });\r\n        \r\n  };\r\n  useEffect(() => {\r\n    emailInputRef1.current.focus();\r\n  }, []);\r\n\r\n    const validHandler1=()=>{\r\n      setwrongemail2(false);\r\n    }\r\n    const validpasswordHandler1=()=>{\r\n      setwrongpassword2(false);\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"mainform\">\r\n          <form onSubmit={submitHandler1}>\r\n            <h5>Login to Terralogic Meet</h5>\r\n            <div className=\"login\">\r\n              <label>Email Id</label>\r\n              <input\r\n                className=\"input\"\r\n                ref={emailInputRef1}\r\n                type=\"text\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"login1\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                ref={passwordInputRef1}\r\n                required\r\n                onInput={passwordenterhandler2}\r\n                onClick={() => setpasswordcondition(true)}\r\n              />\r\n              <div className=\"conditions\">\r\n                {passwordcondition ? (\r\n                  <div>\r\n                    <ul\r\n                      style={{\r\n                        fontSize: \"14px\",\r\n                        marginTop: \"10px\",\r\n                        marginLeft: \"35px\",\r\n                      }}\r\n                    >\r\n                      <li\r\n                        style={{\r\n                          lineHeight: \"20px\",\r\n                          color: passwordlength ? \"green\" : \"red\",\r\n                        }}\r\n                      >\r\n                        Minimum 8 characters\r\n                      </li>\r\n                      <li\r\n                        style={{\r\n                          lineHeight: \"20px\",\r\n                          color: passworduppercase ? \"green\" : \"red\",\r\n                        }}\r\n                      >\r\n                        Aleast One Uppercase\r\n                      </li>\r\n                      <li\r\n                        style={{\r\n                          lineHeight: \"20px\",\r\n                          color: passwordlowercase ? \"green\" : \"red\",\r\n                        }}\r\n                      >\r\n                        Lowercase\r\n                      </li>\r\n                      <li\r\n                        style={{\r\n                          lineHeight: \"20px\",\r\n                          color: passwordnumber ? \"green\" : \"red\",\r\n                        }}\r\n                      >\r\n                        Number\r\n                      </li>\r\n                      <li\r\n                        style={{\r\n                          lineHeight: \"20px\",\r\n                          color: passwordspecial ? \"green\" : \"red\",\r\n                        }}\r\n                      >\r\n                        Special Character\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" className=\"button1\">\r\n                Login\r\n              </button>\r\n              <p className=\"lins4\">Do no have account ?</p>\r\n              <NavLink to=\"/Registration1\" style={{ textDecoration: \"none\" }}>\r\n                <p className=\"lin4\">Register</p>\r\n              </NavLink>\r\n            </div>\r\n          </form>\r\n          {/* {isLogin && <Loginmessage login={loginHandler}/>} */}\r\n          {wrongemail2 && <Wrongemail valid={validHandler1} />}\r\n          {wrongpassword2 && (\r\n            <Wrongpassword validpassword={validpasswordHandler1} />\r\n          )}\r\n          {/* {wrong===\"EMAIL_NOT_FOUND\" ?{ wrongemail1 && <Wrongemail valid={validHandler}/> }:\"\" }\r\n          {wrong===\"INVALID_PASSWORD\" ? <Wrongpassword /> :\"\"} */}\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default LoginFormUser;","C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Kyathi\\Join.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\Forms\\Adduser.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\MainScreen\\Welcome.js",[],"C:\\Users\\Vamsisai-2994\\REACT\\google-meet-clone\\src\\components\\messages\\Mailsent.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":17},{"ruleId":"183","severity":1,"message":"187","line":8,"column":24,"nodeType":"185","messageId":"186","endLine":8,"endColumn":32},{"ruleId":"188","severity":1,"message":"189","line":30,"column":13,"nodeType":"190","endLine":51,"endColumn":4},{"ruleId":"188","severity":1,"message":"191","line":51,"column":6,"nodeType":"192","endLine":51,"endColumn":8,"suggestions":"193"},{"ruleId":"188","severity":1,"message":"194","line":83,"column":6,"nodeType":"192","endLine":83,"endColumn":30,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":22,"column":47,"nodeType":"198","messageId":"199","endLine":22,"endColumn":48},{"ruleId":"183","severity":1,"message":"200","line":10,"column":8,"nodeType":"185","messageId":"186","endLine":10,"endColumn":15},{"ruleId":"183","severity":1,"message":"201","line":16,"column":9,"nodeType":"185","messageId":"186","endLine":16,"endColumn":16},{"ruleId":"188","severity":1,"message":"202","line":26,"column":5,"nodeType":"192","endLine":26,"endColumn":7,"suggestions":"203"},{"ruleId":"183","severity":1,"message":"204","line":1,"column":37,"nodeType":"185","messageId":"186","endLine":1,"endColumn":43},{"ruleId":"183","severity":1,"message":"205","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":18},{"ruleId":"188","severity":1,"message":"206","line":56,"column":6,"nodeType":"192","endLine":56,"endColumn":23,"suggestions":"207"},{"ruleId":"188","severity":1,"message":"206","line":59,"column":6,"nodeType":"192","endLine":59,"endColumn":25,"suggestions":"208"},{"ruleId":"196","severity":1,"message":"197","line":60,"column":79,"nodeType":"198","messageId":"199","endLine":60,"endColumn":80},{"ruleId":"196","severity":1,"message":"197","line":19,"column":34,"nodeType":"198","messageId":"199","endLine":19,"endColumn":35},{"ruleId":"183","severity":1,"message":"209","line":3,"column":9,"nodeType":"185","messageId":"186","endLine":3,"endColumn":16},{"ruleId":"183","severity":1,"message":"210","line":4,"column":15,"nodeType":"185","messageId":"186","endLine":4,"endColumn":25},{"ruleId":"183","severity":1,"message":"211","line":10,"column":8,"nodeType":"185","messageId":"186","endLine":10,"endColumn":23},{"ruleId":"183","severity":1,"message":"211","line":7,"column":8,"nodeType":"185","messageId":"186","endLine":7,"endColumn":23},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'Adminpage' is defined but never used.","Identifier","unusedVar","'userName' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'connectedRef', 'participantRef', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["214"],"React Hook useEffect has missing dependencies: 'participantRef' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["215"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Welcome' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isAdmin'. Either include it or remove the dependency array.",["216"],"'useRef' is defined but never used.","'firepadRef' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["217"],["218"],"'NavLink' is defined but never used.","'useContext' is defined but never used.","'DoneOutlineIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [connectedRef, participantRef, props]",{"range":"229","text":"230"},"Update the dependencies array to be: [isStreamSet, isUserSet, participantRef, props]",{"range":"231","text":"232"},"Update the dependencies array to be: [isAdmin]",{"range":"233","text":"234"},"Update the dependencies array to be: [props, streamState.mic]",{"range":"235","text":"236"},"Update the dependencies array to be: [props, streamState.video]",{"range":"237","text":"238"},[1568,1570],"[connectedRef, participantRef, props]",[2538,2562],"[isStreamSet, isUserSet, participantRef, props]",[1004,1006],"[isAdmin]",[1434,1451],"[props, streamState.mic]",[1525,1544],"[props, streamState.video]"]