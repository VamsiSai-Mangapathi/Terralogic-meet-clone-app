{"ast":null,"code":"import { SET_MAIN_STREAM, ADD_PARTICIPANT, SET_USER, REMOVE_PARTICIPANT, UPDATE_USER, UPDATE_PARTICIPANT } from \"./actiontypes\";\nimport { createOffer, initializeListensers, updatePreference } from \"../server/peerConnection\";\nlet defaultUserState = {\n  mainStream: null,\n  participants: {},\n  currentUser: null\n};\nconst servers = {\n  iceServers: [{\n    urls: [\"stun:stun1.l.google.com:19302\", \"stun:stun2.l.google.com:19302\", \"stun:stun.l.google.com:19302\", \"stun:stun3.l.google.com:19302\", \"stun:stun4.l.google.com:19302\", \"stun:stun.services.mozilla.com\"]\n  }],\n  iceCandidatePoolSize: 10\n};\nconst generateColor = () => \"#\" + Math.floor(Math.random() * 16777215).toString(16);\nexport const userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultUserState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === SET_MAIN_STREAM) {\n    let payload = action.payload;\n    state = {\n      ...state,\n      ...payload\n    };\n    return state;\n  } else if (action.type === ADD_PARTICIPANT) {\n    let payload = action.payload;\n    const currentUserId = Object.keys(state.currentUser)[0];\n    const newUserId = Object.keys(payload.newUser)[0];\n    if (state.mainStream && currentUserId !== newUserId) {\n      payload.newUser = addConnection(payload.newUser, state.currentUser, state.mainStream);\n    }\n    if (currentUserId === newUserId) payload.newUser[newUserId].currentUser = true;\n    payload.newUser[newUserId].avatarColor = generateColor();\n    let participants = {\n      ...state.participants,\n      ...payload.newUser\n    };\n    state = {\n      ...state,\n      participants\n    };\n    return state;\n  } else if (action.type === SET_USER) {\n    let payload = action.payload;\n    let participants = {\n      ...state.participants\n    };\n    const userId = Object.keys(payload.currentUser)[0];\n    payload.currentUser[userId].avatarColor = generateColor();\n    initializeListensers(userId);\n    state = {\n      ...state,\n      currentUser: {\n        ...payload.currentUser\n      },\n      participants\n    };\n    return state;\n  } else if (action.type === REMOVE_PARTICIPANT) {\n    let payload = action.payload;\n    let participants = {\n      ...state.participants\n    };\n    delete participants[payload.id];\n    state = {\n      ...state,\n      participants\n    };\n    return state;\n  } else if (action.type === UPDATE_USER) {\n    let payload = action.payload;\n    const userId = Object.keys(state.currentUser)[0];\n    updatePreference(userId, payload.currentUser);\n    state.currentUser[userId] = {\n      ...state.currentUser[userId],\n      ...payload.currentUser\n    };\n    state = {\n      ...state,\n      currentUser: {\n        ...state.currentUser\n      }\n    };\n    return state;\n  } else if (action.type === UPDATE_PARTICIPANT) {\n    let payload = action.payload;\n    const newUserId = Object.keys(payload.newUser)[0];\n    payload.newUser[newUserId] = {\n      ...state.participants[newUserId],\n      ...payload.newUser[newUserId]\n    };\n    let participants = {\n      ...state.participants,\n      ...payload.newUser\n    };\n    state = {\n      ...state,\n      participants\n    };\n    return state;\n  }\n  return state;\n};\nconst addConnection = (newUser, currentUser, stream) => {\n  const peerConnection = new RTCPeerConnection(servers);\n  stream.getTracks().forEach(track => {\n    peerConnection.addTrack(track, stream);\n  });\n  const newUserId = Object.keys(newUser)[0];\n  const currentUserId = Object.keys(currentUser)[0];\n  const offerIds = [newUserId, currentUserId].sort((a, b) => a.localeCompare(b));\n  newUser[newUserId].peerConnection = peerConnection;\n  if (offerIds[0] !== currentUserId) createOffer(peerConnection, offerIds[0], offerIds[1]);\n  return newUser;\n};","map":{"version":3,"names":["SET_MAIN_STREAM","ADD_PARTICIPANT","SET_USER","REMOVE_PARTICIPANT","UPDATE_USER","UPDATE_PARTICIPANT","createOffer","initializeListensers","updatePreference","defaultUserState","mainStream","participants","currentUser","servers","iceServers","urls","iceCandidatePoolSize","generateColor","Math","floor","random","toString","userReducer","state","action","type","payload","currentUserId","Object","keys","newUserId","newUser","addConnection","avatarColor","userId","id","stream","peerConnection","RTCPeerConnection","getTracks","forEach","track","addTrack","offerIds","sort","a","b","localeCompare"],"sources":["C:/Users/Vamsisai-2994/REACT/google-meet-clone/src/store/reducer.js"],"sourcesContent":["import {\r\n  SET_MAIN_STREAM,\r\n  ADD_PARTICIPANT,\r\n  SET_USER,\r\n  REMOVE_PARTICIPANT,\r\n  UPDATE_USER,\r\n  UPDATE_PARTICIPANT,\r\n} from \"./actiontypes\";\r\n\r\nimport {\r\n  createOffer,\r\n  initializeListensers,\r\n  updatePreference,\r\n} from \"../server/peerConnection\";\r\n\r\nlet defaultUserState = {\r\n  mainStream: null,\r\n  participants: {},\r\n  currentUser: null,\r\n};\r\n\r\nconst servers = {\r\n  iceServers: [\r\n    {\r\n      urls: [\r\n        \"stun:stun1.l.google.com:19302\",\r\n        \"stun:stun2.l.google.com:19302\",\r\n        \"stun:stun.l.google.com:19302\",\r\n        \"stun:stun3.l.google.com:19302\",\r\n        \"stun:stun4.l.google.com:19302\",\r\n        \"stun:stun.services.mozilla.com\",\r\n      ],\r\n    },\r\n  ],\r\n  iceCandidatePoolSize: 10,\r\n};\r\n\r\nconst generateColor = () =>\r\n  \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n\r\nexport const userReducer = (state = defaultUserState, action) => {\r\n  if (action.type === SET_MAIN_STREAM) {\r\n    let payload = action.payload;\r\n    state = { ...state, ...payload };\r\n    return state;\r\n  } else if (action.type === ADD_PARTICIPANT) {\r\n    let payload = action.payload;\r\n    const currentUserId = Object.keys(state.currentUser)[0];\r\n    const newUserId = Object.keys(payload.newUser)[0];\r\n    if (state.mainStream && currentUserId !== newUserId) {\r\n      payload.newUser = addConnection(\r\n        payload.newUser,\r\n        state.currentUser,\r\n        state.mainStream\r\n      );\r\n    }\r\n\r\n    if (currentUserId === newUserId)\r\n      payload.newUser[newUserId].currentUser = true;\r\n    payload.newUser[newUserId].avatarColor = generateColor();\r\n    let participants = { ...state.participants, ...payload.newUser };\r\n    state = { ...state, participants };\r\n    return state;\r\n  } else if (action.type === SET_USER) {\r\n    let payload = action.payload;\r\n    let participants = { ...state.participants };\r\n    const userId = Object.keys(payload.currentUser)[0];\r\n    payload.currentUser[userId].avatarColor = generateColor();\r\n    initializeListensers(userId);\r\n    state = { ...state, currentUser: { ...payload.currentUser }, participants };\r\n    return state;\r\n  } else if (action.type === REMOVE_PARTICIPANT) {\r\n    let payload = action.payload;\r\n    let participants = { ...state.participants };\r\n    delete participants[payload.id];\r\n    state = { ...state, participants };\r\n    return state;\r\n  } else if (action.type === UPDATE_USER) {\r\n    let payload = action.payload;\r\n    const userId = Object.keys(state.currentUser)[0];\r\n    updatePreference(userId, payload.currentUser);\r\n    state.currentUser[userId] = {\r\n      ...state.currentUser[userId],\r\n      ...payload.currentUser,\r\n    };\r\n    state = {\r\n      ...state,\r\n      currentUser: { ...state.currentUser },\r\n    };\r\n    return state;\r\n  } else if (action.type === UPDATE_PARTICIPANT) {\r\n    let payload = action.payload;\r\n    const newUserId = Object.keys(payload.newUser)[0];\r\n\r\n    payload.newUser[newUserId] = {\r\n      ...state.participants[newUserId],\r\n      ...payload.newUser[newUserId],\r\n    };\r\n    let participants = { ...state.participants, ...payload.newUser };\r\n    state = { ...state, participants };\r\n    return state;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst addConnection = (newUser, currentUser, stream) => {\r\n  const peerConnection = new RTCPeerConnection(servers);\r\n  stream.getTracks().forEach((track) => {\r\n    peerConnection.addTrack(track, stream);\r\n  });\r\n  const newUserId = Object.keys(newUser)[0];\r\n  const currentUserId = Object.keys(currentUser)[0];\r\n\r\n  const offerIds = [newUserId, currentUserId].sort((a, b) =>\r\n    a.localeCompare(b)\r\n  );\r\n\r\n  newUser[newUserId].peerConnection = peerConnection;\r\n  if (offerIds[0] !== currentUserId)\r\n    createOffer(peerConnection, offerIds[0], offerIds[1]);\r\n  return newUser;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}