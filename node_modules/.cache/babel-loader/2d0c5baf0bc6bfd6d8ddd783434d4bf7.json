{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vamsisai-2994\\\\REACT\\\\google-meet-clone\\\\src\\\\components\\\\Forms\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport './LoginForm.css';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Registration.css';\nimport Wrongemail from '../messages/Wrongemail';\nimport Wrongpassword from '../messages/Wrongpassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm(props) {\n  _s();\n\n  const history = useHistory();\n  const [wrong, setwrong] = useState();\n  const [wrongemail1, setwrongemail1] = useState();\n  const [wrongpassword1, setwrongpassword1] = useState();\n  const [passwordlength, setpasswordlength] = useState();\n  const [passworduppercase, setpassworduppercase] = useState();\n  const [passwordlowercase, setpasswordlowercase] = useState();\n  const [passwordnumber, setpasswordnumber] = useState();\n  const [passwordspecial, setpasswordspecial] = useState();\n  const [passwordcondition, setpasswordcondition] = useState();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const passwordenterhandler1 = () => {\n    const enteredpassword1 = passwordInputRef.current.value;\n\n    if (enteredpassword1.trim().length >= 8) {\n      setpasswordlength(true);\n    } else if (enteredpassword1.trim().length < 8) {\n      setpasswordlength(false);\n    }\n\n    if (enteredpassword1.match(/[A-Z]/)) {\n      setpassworduppercase(true);\n    } else {\n      setpassworduppercase(false);\n    }\n\n    if (enteredpassword1.match(/[a-z]/)) {\n      setpasswordlowercase(true);\n    } else {\n      setpasswordlowercase(false);\n    }\n\n    if (enteredpassword1.match(/[0-9]/)) {\n      setpasswordnumber(true);\n    } else {\n      setpasswordnumber(false);\n    }\n\n    if (enteredpassword1.match(/[^A-Za-z0-9-' ']/i)) {\n      setpasswordspecial(true);\n    } else {\n      setpasswordspecial(false);\n    }\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBERMyCRpzcfn_xn0o7_b464pVhJI2Y1RI', // \"http://127.0.0.1:8000/49.205.67.174/login\",\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        history.push('/after');\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = \"Authentication failed!\";\n\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message;\n          }\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      console.log(data);\n    }).catch(err => {\n      setwrong(err.message);\n\n      if (wrong === \"EMAIL_NOT_FOUND\") {\n        setwrongemail1(true);\n      }\n\n      if (wrong === \"INVALID_PASSWORD\") {\n        setwrongpassword1(true);\n      }\n    });\n  };\n\n  useEffect(() => {\n    emailInputRef.current.focus();\n  }, []);\n\n  const validHandler = () => {\n    setwrongemail1(false);\n  };\n\n  const validpasswordHandler = () => {\n    setwrongpassword1(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainform\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Login to Terralogic Meet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            ref: emailInputRef,\n            type: \"text\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            ref: passwordInputRef,\n            required: true,\n            onInput: passwordenterhandler1,\n            onClick: () => setpasswordcondition(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conditions\",\n          children: passwordcondition ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                fontSize: \"14px\",\n                marginTop: \"10px\",\n                marginLeft: \"35px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"20px\",\n                  color: passwordlength ? \"green\" : \"red\"\n                },\n                children: \"Minimum 8 characters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"20px\",\n                  color: passworduppercase ? \"green\" : \"red\"\n                },\n                children: \"Aleast One Uppercase\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"20px\",\n                  color: passwordlowercase ? \"green\" : \"red\"\n                },\n                children: \"Lowercase\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"20px\",\n                  color: passwordnumber ? \"green\" : \"red\"\n                },\n                children: \"Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"20px\",\n                  color: passwordspecial ? \"green\" : \"red\"\n                },\n                children: \"Special Character\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button1\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lins4\",\n            children: \"Do no have account ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/Registration\",\n            style: {\n              textDecoration: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"lin4\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), wrongemail1 && /*#__PURE__*/_jsxDEV(Wrongemail, {\n        valid: validHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 27\n      }, this), wrongpassword1 && /*#__PURE__*/_jsxDEV(Wrongpassword, {\n        validpassword: validpasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 7\n  }, this);\n}\n\n_s(LoginForm, \"pfXwqyrEXdmEkR1t/rw54AuVv24=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginForm;\n;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/Vamsisai-2994/REACT/google-meet-clone/src/components/Forms/LoginForm.js"],"names":["NavLink","useHistory","React","useState","useRef","useEffect","Wrongemail","Wrongpassword","LoginForm","props","history","wrong","setwrong","wrongemail1","setwrongemail1","wrongpassword1","setwrongpassword1","passwordlength","setpasswordlength","passworduppercase","setpassworduppercase","passwordlowercase","setpasswordlowercase","passwordnumber","setpasswordnumber","passwordspecial","setpasswordspecial","passwordcondition","setpasswordcondition","emailInputRef","passwordInputRef","passwordenterhandler1","enteredpassword1","current","value","trim","length","match","submitHandler","event","preventDefault","enteredEmail","enteredPassword","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","push","json","data","errorMessage","error","message","Error","console","log","catch","err","focus","validHandler","validpasswordHandler","fontSize","marginTop","marginLeft","lineHeight","color","textDecoration"],"mappings":"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","sourcesContent":["import './LoginForm.css';\r\nimport {NavLink,useHistory} from 'react-router-dom';\r\nimport React,{useState,useRef,useEffect} from 'react';\r\nimport './Registration.css';\r\nimport Wrongemail from '../messages/Wrongemail';\r\nimport Wrongpassword from '../messages/Wrongpassword';\r\n\r\n\r\nfunction LoginForm(props){\r\n    const history=useHistory();\r\n\r\n    const[wrong,setwrong]=useState();\r\n    const[wrongemail1,setwrongemail1]=useState();\r\n    const[wrongpassword1,setwrongpassword1]=useState();\r\n    const[passwordlength,setpasswordlength]=useState();\r\n    const[passworduppercase,setpassworduppercase]=useState();\r\n    const[passwordlowercase,setpasswordlowercase]=useState();\r\n    const[passwordnumber,setpasswordnumber]=useState();\r\n    const [passwordspecial, setpasswordspecial] = useState();\r\n    const[passwordcondition,setpasswordcondition]=useState();\r\n    const emailInputRef = useRef();\r\n    const passwordInputRef = useRef();\r\n\r\n\r\n    const passwordenterhandler1=()=>{\r\n      const enteredpassword1=passwordInputRef.current.value;\r\n        if(enteredpassword1.trim().length>=8){\r\n          setpasswordlength(true);\r\n        }else\r\n        if(enteredpassword1.trim().length<8){setpasswordlength(false)}\r\n        if(enteredpassword1.match(/[A-Z]/)){\r\n          setpassworduppercase(true);\r\n        }\r\n        else {\r\n          setpassworduppercase(false);\r\n        }\r\n        if(enteredpassword1.match(/[a-z]/)){\r\n          setpasswordlowercase(true);\r\n        }\r\n        else{\r\n          setpasswordlowercase(false);\r\n        }\r\n        if(enteredpassword1.match(/[0-9]/)){\r\n          setpasswordnumber(true);\r\n        }\r\n        else{\r\n          setpasswordnumber(false);\r\n        }\r\n        if(enteredpassword1.match(/[^A-Za-z0-9-' ']/i)){\r\n          setpasswordspecial(true);\r\n        }\r\n        else{\r\n          setpasswordspecial(false);\r\n        }\r\n    }\r\n    \r\n    const submitHandler = (event) => {\r\n      event.preventDefault();\r\n  \r\n      const enteredEmail = emailInputRef.current.value;\r\n      const enteredPassword = passwordInputRef.current.value;\r\n      \r\n      \r\n      \r\n        fetch(\r\n          'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBERMyCRpzcfn_xn0o7_b464pVhJI2Y1RI',\r\n          // \"http://127.0.0.1:8000/49.205.67.174/login\",\r\n       {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          email: enteredEmail,\r\n          password: enteredPassword,\r\n          returnSecureToken: true,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (res.ok) {\r\n            history.push('/after')\r\n            return res.json();\r\n          } else {\r\n            return res.json().then((data) => {\r\n              let errorMessage = \"Authentication failed!\";\r\n              if (data && data.error && data.error.message) {\r\n                errorMessage = data.error.message;\r\n              }\r\n\r\n              throw new Error(errorMessage);\r\n            });\r\n          }\r\n        })\r\n        .then((data) => {\r\n          console.log(data);\r\n        })\r\n        .catch((err) => {\r\n          setwrong(err.message);\r\n          if(wrong === \"EMAIL_NOT_FOUND\"){\r\n            setwrongemail1(true);\r\n          }\r\n          if(wrong === \"INVALID_PASSWORD\") {\r\n            setwrongpassword1(true)\r\n          }\r\n        });\r\n        \r\n  };\r\n  useEffect(() => {\r\n    emailInputRef.current.focus();\r\n  }, []);\r\n\r\n    const validHandler=()=>{\r\n      setwrongemail1(false);\r\n    }\r\n    const validpasswordHandler=()=>{\r\n      setwrongpassword1(false);\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"mainform\">\r\n          <form onSubmit={submitHandler}>\r\n            <h5>Login to Terralogic Meet</h5>\r\n            <div className=\"login\">\r\n              <label>Email Id</label>\r\n              <input\r\n                className=\"input\"\r\n                ref={emailInputRef}\r\n                type=\"text\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"login1\" >\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                ref={passwordInputRef}\r\n                required\r\n                onInput={passwordenterhandler1}\r\n                onClick={() => setpasswordcondition(true)}\r\n              />\r\n            </div>\r\n            <div className=\"conditions\">\r\n             {passwordcondition ? (\r\n              <div>\r\n                <ul\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    marginTop: \"10px\",\r\n                    marginLeft: \"35px\",\r\n                  }}\r\n                >\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordlength ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Minimum 8 characters\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passworduppercase ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Aleast One Uppercase\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordlowercase ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Lowercase\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordnumber ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Number\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordspecial ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Special Character\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n             ) : (\r\n              \"\"\r\n             )}\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\" className=\"button1\">\r\n                Login\r\n              </button>\r\n              <p className=\"lins4\">Do no have account ?</p>\r\n              <NavLink to=\"/Registration\" style={{ textDecoration: \"none\" }}>\r\n                <p className=\"lin4\">Register</p>\r\n              </NavLink>\r\n            </div>\r\n          </form>\r\n          {wrongemail1 && <Wrongemail valid={validHandler} />}\r\n          {wrongpassword1 && (\r\n            <Wrongpassword validpassword={validpasswordHandler} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}