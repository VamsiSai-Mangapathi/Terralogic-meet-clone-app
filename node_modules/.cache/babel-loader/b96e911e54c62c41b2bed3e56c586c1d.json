{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vamsisai-2994\\\\REACT\\\\google-meet-clone\\\\src\\\\components\\\\Participants\\\\Participants.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport \"./Participants.css\";\nimport { connect } from \"react-redux\";\nimport { Participant } from \"./Participant/Participant.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Participants = props => {\n  _s();\n\n  const videoRef = useRef(null);\n  let participantKey = Object.keys(props.participants);\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.srcObject = props.stream;\n      videoRef.current.muted = true;\n    }\n  }, [props.currentUser, props.stream]);\n  const currentUser = props.currentUser ? Object.values(props.currentUser)[0] : null;\n  let gridCol = participantKey.length === 1 ? 1 : participantKey.length <= 4 ? 2 : 4;\n  const gridColSize = participantKey.length <= 4 ? 1 : 2;\n  let gridRowSize = participantKey.length <= 4 ? participantKey.length : Math.ceil(participantKey.length / 2);\n  const screenPresenter = participantKey.find(element => {\n    const currentParticipant = props.participants[element];\n    return currentParticipant.screen;\n  });\n\n  if (screenPresenter) {\n    gridCol = 1;\n    gridRowSize = 2;\n  }\n\n  const participants = participantKey.map((element, index) => {\n    const currentParticipant = props.participants[element];\n    const isCurrentUser = currentParticipant.currentUser;\n\n    if (isCurrentUser) {\n      return null;\n    }\n\n    const pc = currentParticipant.peerConnection;\n    const remoteStream = new MediaStream();\n    let curentIndex = index;\n\n    if (pc) {\n      pc.ontrack = event => {\n        event.streams[0].getTracks().forEach(track => {\n          remoteStream.addTrack(track);\n        });\n        const videElement = document.getElementById(`participantVideo${curentIndex}`);\n        if (videElement) videElement.srcObject = remoteStream;\n      };\n    }\n\n    return /*#__PURE__*/_jsxDEV(Participant, {\n      currentParticipant: currentParticipant,\n      curentIndex: curentIndex,\n      hideVideo: screenPresenter && screenPresenter !== element,\n      showAvatar: !currentParticipant.video && !currentParticipant.screen && currentParticipant.name\n    }, curentIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      \"--grid-size\": gridCol,\n      \"--grid-col-size\": gridColSize,\n      \"--grid-row-size\": gridRowSize\n    },\n    className: `participants`,\n    children: [participants, /*#__PURE__*/_jsxDEV(Participant, {\n      currentParticipant: currentUser,\n      curentIndex: participantKey.length,\n      hideVideo: screenPresenter && !currentUser.screen,\n      videoRef: videoRef,\n      showAvatar: currentUser && !currentUser.video && !currentUser.screen,\n      currentUser: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Participants, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n\n_c = Participants;\n\nconst mapStateToProps = state => {\n  return {\n    participants: state.participants,\n    currentUser: state.currentUser,\n    stream: state.mainStream\n  };\n};\n\nexport default connect(mapStateToProps)(Participants);\n\nvar _c;\n\n$RefreshReg$(_c, \"Participants\");","map":{"version":3,"sources":["C:/Users/Vamsisai-2994/REACT/google-meet-clone/src/components/Participants/Participants.component.js"],"names":["React","useEffect","useRef","connect","Participant","Participants","props","videoRef","participantKey","Object","keys","participants","current","srcObject","stream","muted","currentUser","values","gridCol","length","gridColSize","gridRowSize","Math","ceil","screenPresenter","find","element","currentParticipant","screen","map","index","isCurrentUser","pc","peerConnection","remoteStream","MediaStream","curentIndex","ontrack","event","streams","getTracks","forEach","track","addTrack","videElement","document","getElementById","video","name","mapStateToProps","state","mainStream"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport \"./Participants.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { Participant } from \"./Participant/Participant.component\";\r\n\r\nconst Participants = (props) => {\r\n  const videoRef = useRef(null);\r\n  let participantKey = Object.keys(props.participants);\r\n  useEffect(() => {\r\n    if (videoRef.current) {\r\n      videoRef.current.srcObject = props.stream;\r\n      videoRef.current.muted = true;\r\n    }\r\n  }, [props.currentUser, props.stream]);\r\n\r\n  const currentUser = props.currentUser\r\n    ? Object.values(props.currentUser)[0]\r\n    : null;\r\n\r\n  let gridCol =\r\n    participantKey.length === 1 ? 1 : participantKey.length <= 4 ? 2 : 4;\r\n  const gridColSize = participantKey.length <= 4 ? 1 : 2;\r\n  let gridRowSize =\r\n    participantKey.length <= 4\r\n      ? participantKey.length\r\n      : Math.ceil(participantKey.length / 2);\r\n\r\n  const screenPresenter = participantKey.find((element) => {\r\n    const currentParticipant = props.participants[element];\r\n    return currentParticipant.screen;\r\n  });\r\n\r\n  if (screenPresenter) {\r\n    gridCol = 1;\r\n    gridRowSize = 2;\r\n  }\r\n  const participants = participantKey.map((element, index) => {\r\n    const currentParticipant = props.participants[element];\r\n    const isCurrentUser = currentParticipant.currentUser;\r\n    if (isCurrentUser) {\r\n      return null;\r\n    }\r\n    const pc = currentParticipant.peerConnection;\r\n    const remoteStream = new MediaStream();\r\n    let curentIndex = index;\r\n    if (pc) {\r\n      pc.ontrack = (event) => {\r\n        event.streams[0].getTracks().forEach((track) => {\r\n          remoteStream.addTrack(track);\r\n        });\r\n        const videElement = document.getElementById(\r\n          `participantVideo${curentIndex}`\r\n        );\r\n        if (videElement) videElement.srcObject = remoteStream;\r\n      };\r\n    }\r\n\r\n    return (\r\n      <Participant\r\n        key={curentIndex}\r\n        currentParticipant={currentParticipant}\r\n        curentIndex={curentIndex}\r\n        hideVideo={screenPresenter && screenPresenter !== element}\r\n        showAvatar={\r\n          !currentParticipant.video &&\r\n          !currentParticipant.screen &&\r\n          currentParticipant.name\r\n        }\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <div\r\n      style={{\r\n        \"--grid-size\": gridCol,\r\n        \"--grid-col-size\": gridColSize,\r\n        \"--grid-row-size\": gridRowSize,\r\n      }}\r\n      className={`participants`}\r\n    >\r\n      {participants}\r\n      <Participant\r\n        currentParticipant={currentUser}\r\n        curentIndex={participantKey.length}\r\n        hideVideo={screenPresenter && !currentUser.screen}\r\n        videoRef={videoRef}\r\n        showAvatar={currentUser && !currentUser.video && !currentUser.screen}\r\n        currentUser={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    participants: state.participants,\r\n    currentUser: state.currentUser,\r\n    stream: state.mainStream,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Participants);\r\n"]},"metadata":{},"sourceType":"module"}