{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vamsisai-2994\\\\REACT\\\\google-meet-clone\\\\src\\\\components\\\\Forms\\\\Registration.js\",\n    _s = $RefreshSig$();\n\nimport './LoginForm.css';\nimport './Registration.css';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport React, { useState, useRef, useEffect } from 'react';\nimport logo1 from '../../assets/image.png';\nimport Registermessage from '../messages/Registermessage';\nimport Emailvalid from '../messages/Emailvalid';\nimport Header from '../Header';\nimport Wrongregister from '../messages/Wrongregister';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Registration(props) {\n  _s();\n\n  const history = useHistory();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const usernameref = useRef();\n  const confirmpasswordRef = useRef();\n  const [Rmessage, setRmessage] = useState(false);\n  const [emailisValid, setemailisValid] = useState(false);\n  const [errorregister, seterrorregister] = useState();\n  const [wrongregister, setwrongregister] = useState();\n  const [passwordlength, setpasswordlength] = useState();\n  const [passworduppercase, setpassworduppercase] = useState();\n  const [passwordlowercase, setpasswordlowercase] = useState();\n  const [passwordnumber, setpasswordnumber] = useState();\n  const [passwordspecial, setpasswordspecial] = useState();\n  const [passwordmatch, setpasswordmatch] = useState();\n  const [formisValid, setformisValid] = useState(false);\n  const [passwordcondition, setpasswordcondition] = useState();\n  const [passwordcondition1, setpasswordcondition1] = useState(); // const enteredpassword1=passwordRef.current.value;\n\n  const passwordenterhandler = () => {\n    const enteredpassword1 = passwordRef.current.value;\n\n    if (enteredpassword1.trim().length >= 8) {\n      setpasswordlength(true);\n    } else if (enteredpassword1.trim().length < 8) {\n      setpasswordlength(false);\n    }\n\n    if (enteredpassword1.match(/[A-Z]/)) {\n      setpassworduppercase(true);\n    } else {\n      setpassworduppercase(false);\n    }\n\n    if (enteredpassword1.match(/[a-z]/)) {\n      setpasswordlowercase(true);\n    } else {\n      setpasswordlowercase(false);\n    }\n\n    if (enteredpassword1.match(/[0-9]/)) {\n      setpasswordnumber(true);\n    } else {\n      setpasswordnumber(false);\n    }\n\n    if (enteredpassword1.match(/[^A-Za-z0-9-' ']/i)) {\n      setpasswordspecial(true);\n    } else {\n      setpasswordspecial(false);\n    }\n  };\n\n  const confirmpasswordhandler = () => {\n    const confirmpassword = confirmpasswordRef.current.value;\n    const enteredpassword1 = passwordRef.current.value;\n\n    if (confirmpassword === enteredpassword1) {\n      setformisValid(true);\n      setpasswordmatch(true);\n    } else {\n      setformisValid(false);\n      setpasswordmatch(false);\n    }\n  };\n\n  const handler = () => {\n    setRmessage(false);\n    history.push('/login');\n  };\n\n  const emailHandler = () => {\n    setemailisValid(false);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailRef.current.value;\n    const enteredpassword = passwordRef.current.value;\n    const enteredUsername = usernameref.current.value;\n\n    if (enteredEmail.includes(\"@terralogic.com\")) {\n      fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBERMyCRpzcfn_xn0o7_b464pVhJI2Y1RI\", // \"http://127.0.0.1:8000/register\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          username: enteredUsername,\n          email: enteredEmail,\n          password: enteredpassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        if (res.ok) {\n          setRmessage(true);\n        } else {\n          return res.json().then(data => {\n            let errorMessage = \"Authentication failed!\";\n\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            setRmessage(false);\n            seterrorregister(errorMessage);\n\n            if (errorregister === \"EMAIL_EXISTS\") {\n              setwrongregister(true);\n            }\n          });\n        }\n      });\n    } else {\n      setemailisValid(true);\n    }\n  };\n\n  useEffect(() => {\n    usernameref.current.focus();\n  }, []);\n\n  const validregisterHandler = () => {\n    setwrongregister(false);\n  };\n\n  const passwordconditions = () => {\n    setpasswordcondition(false);\n    setpasswordcondition1(true);\n  };\n\n  const pswdconditions = () => {\n    setpasswordcondition(true);\n    setpasswordcondition1(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo1\",\n        src: logo1,\n        alt: \"logo1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainform\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"h5\",\n          children: \"Registration for Terralogic Meet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"text\",\n            id: \"username\",\n            ref: usernameref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            ref: emailRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            ref: passwordRef,\n            pattern: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,}$\",\n            onInput: passwordenterhandler,\n            onClick: pswdconditions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conditions\",\n          children: passwordcondition ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                fontSize: \"14px\",\n                marginTop: \"10px\",\n                marginLeft: \"35px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"20px\",\n                  color: passwordlength ? \"green\" : \"red\"\n                },\n                children: \"Minimum 8 characters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"20px\",\n                  color: passworduppercase ? \"green\" : \"red\"\n                },\n                children: \"Aleast One Uppercase\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"20px\",\n                  color: passwordlowercase ? \"green\" : \"red\"\n                },\n                children: \"Lowercase\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"20px\",\n                  color: passwordnumber ? \"green\" : \"red\"\n                },\n                children: \"Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"20px\",\n                  color: passwordspecial ? \"green\" : \"red\"\n                },\n                children: \"Special Character\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            ref: confirmpasswordRef,\n            onInput: confirmpasswordhandler,\n            onClick: passwordconditions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conditions\",\n          children: passwordcondition1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                fontSize: \"14px\",\n                marginTop: \"10px\",\n                marginLeft: \"35px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"25px\",\n                  color: passwordmatch ? \"green\" : \"red\"\n                },\n                children: \"Password Match\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button1\",\n            type: \"submit\",\n            disabled: !formisValid,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lins4\",\n            children: \"Already have an account ? \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/login\",\n            style: {\n              textDecoration: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"lin4\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), Rmessage && /*#__PURE__*/_jsxDEV(Registermessage, {\n        click: handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 22\n      }, this), emailisValid && /*#__PURE__*/_jsxDEV(Emailvalid, {\n        email: emailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 26\n      }, this), wrongregister && /*#__PURE__*/_jsxDEV(Wrongregister, {\n        validregister: validregisterHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Registration, \"5M3Y1mtq+QeO3RqZVbmFSzbYSMA=\", false, function () {\n  return [useHistory];\n});\n\n_c = Registration;\n;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["C:/Users/Vamsisai-2994/REACT/google-meet-clone/src/components/Forms/Registration.js"],"names":["NavLink","useHistory","React","useState","useRef","useEffect","logo1","Registermessage","Emailvalid","Header","Wrongregister","Registration","props","history","emailRef","passwordRef","usernameref","confirmpasswordRef","Rmessage","setRmessage","emailisValid","setemailisValid","errorregister","seterrorregister","wrongregister","setwrongregister","passwordlength","setpasswordlength","passworduppercase","setpassworduppercase","passwordlowercase","setpasswordlowercase","passwordnumber","setpasswordnumber","passwordspecial","setpasswordspecial","passwordmatch","setpasswordmatch","formisValid","setformisValid","passwordcondition","setpasswordcondition","passwordcondition1","setpasswordcondition1","passwordenterhandler","enteredpassword1","current","value","trim","length","match","confirmpasswordhandler","confirmpassword","handler","push","emailHandler","submitHandler","event","preventDefault","enteredEmail","enteredpassword","enteredUsername","includes","fetch","method","body","JSON","stringify","username","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","error","message","focus","validregisterHandler","passwordconditions","pswdconditions","fontSize","marginTop","marginLeft","lineHeight","color","textDecoration"],"mappings":"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","sourcesContent":["import './LoginForm.css';\r\nimport './Registration.css';\r\nimport {NavLink,useHistory} from 'react-router-dom';\r\nimport React,{useState,useRef,useEffect} from 'react';\r\nimport logo1 from '../../assets/image.png';\r\nimport Registermessage from '../messages/Registermessage';\r\nimport Emailvalid from '../messages/Emailvalid';\r\nimport Header from '../Header';\r\nimport Wrongregister from '../messages/Wrongregister';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Registration(props){\r\n  const history=useHistory();\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const usernameref=useRef();\r\n  const confirmpasswordRef=useRef();\r\n  const [Rmessage,setRmessage]=useState(false);\r\n  const[emailisValid,setemailisValid]=useState(false);\r\n  const[errorregister,seterrorregister]=useState();\r\n  const[wrongregister,setwrongregister]=useState();\r\n  const[passwordlength,setpasswordlength]=useState();\r\n  const[passworduppercase,setpassworduppercase]=useState();\r\n  const[passwordlowercase,setpasswordlowercase]=useState();\r\n  const[passwordnumber,setpasswordnumber]=useState();\r\n  const[passwordspecial,setpasswordspecial]=useState();\r\n  const[passwordmatch,setpasswordmatch]=useState();\r\n  const [formisValid, setformisValid] = useState(false);\r\n  const[passwordcondition,setpasswordcondition]=useState();\r\n  const[passwordcondition1,setpasswordcondition1]=useState();\r\n  // const enteredpassword1=passwordRef.current.value;\r\n  const passwordenterhandler=()=>{\r\n    const enteredpassword1=passwordRef.current.value;\r\n      if(enteredpassword1.trim().length>=8){\r\n        setpasswordlength(true);\r\n      }else\r\n      if(enteredpassword1.trim().length<8){setpasswordlength(false)}\r\n      if(enteredpassword1.match(/[A-Z]/)){\r\n        setpassworduppercase(true);\r\n      }\r\n      else {\r\n        setpassworduppercase(false);\r\n      }\r\n      if(enteredpassword1.match(/[a-z]/)){\r\n        setpasswordlowercase(true);\r\n      }\r\n      else{\r\n        setpasswordlowercase(false);\r\n      }\r\n      if(enteredpassword1.match(/[0-9]/)){\r\n        setpasswordnumber(true);\r\n      }\r\n      else{\r\n        setpasswordnumber(false);\r\n      }\r\n      if(enteredpassword1.match(/[^A-Za-z0-9-' ']/i)){\r\n        setpasswordspecial(true);\r\n      }\r\n      else{\r\n        setpasswordspecial(false);\r\n      }\r\n  }\r\n  const confirmpasswordhandler=()=>{\r\n    const confirmpassword=confirmpasswordRef.current.value;\r\n    const enteredpassword1=passwordRef.current.value;\r\n    if(confirmpassword === enteredpassword1){\r\n      setformisValid(true);\r\n      setpasswordmatch(true);\r\n    }\r\n    else{\r\n      setformisValid(false);\r\n      setpasswordmatch(false);\r\n    }\r\n  }\r\n  const handler=()=>{\r\n    setRmessage(false);\r\n    history.push('/login')\r\n  };\r\n\r\n  const emailHandler=()=>{\r\n    setemailisValid(false);\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredEmail = emailRef.current.value;\r\n    const enteredpassword = passwordRef.current.value;\r\n    const enteredUsername=usernameref.current.value;\r\n\r\n    if(enteredEmail.includes(\"@terralogic.com\")){\r\n      fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBERMyCRpzcfn_xn0o7_b464pVhJI2Y1RI\",\r\n        // \"http://127.0.0.1:8000/register\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            username:enteredUsername,\r\n            email: enteredEmail,\r\n            password: enteredpassword,\r\n            returnSecureToken: true,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      ).then((res) => {\r\n        if (res.ok) {\r\n          setRmessage(true);\r\n        } else {\r\n          return res.json().then((data) => {\r\n            let errorMessage = \"Authentication failed!\";\r\n            if (data && data.error && data.error.message) {\r\n              errorMessage = data.error.message;\r\n            }\r\n            setRmessage(false);\r\n            seterrorregister(errorMessage);\r\n            if(errorregister === \"EMAIL_EXISTS\"){\r\n              setwrongregister(true);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }else{\r\n      setemailisValid(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    usernameref.current.focus();\r\n  }, []);\r\n\r\n  const validregisterHandler=()=>{\r\n    setwrongregister(false);\r\n  }\r\n\r\n  const passwordconditions=()=>{\r\n    setpasswordcondition(false);\r\n    setpasswordcondition1(true);\r\n  }\r\n  const pswdconditions=()=>{\r\n    setpasswordcondition(true);\r\n    setpasswordcondition1(false);\r\n  }\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div>{<img className=\"logo1\" src={logo1} alt=\"logo1\" />}</div>\r\n      <div className=\"mainform\">\r\n        <form onSubmit={submitHandler}>\r\n          <h5 className=\"h5\">Registration for Terralogic Meet</h5>\r\n          <div className=\"login\">\r\n            <label htmlFor=\"text\">User Name</label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              id=\"username\"\r\n              ref={usernameref}\r\n            />\r\n          </div>\r\n          <div className=\"login\">\r\n            <label htmlFor=\"email\">Email Id</label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              required\r\n              ref={emailRef}\r\n            />\r\n          </div>\r\n          <div className=\"login1\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              required\r\n              ref={passwordRef}\r\n              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,}$\"\r\n              onInput={passwordenterhandler}\r\n              onClick={pswdconditions}\r\n            />\r\n          </div>\r\n          <div className=\"conditions\">\r\n            {passwordcondition ? (\r\n              <div>\r\n                <ul\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    marginTop: \"10px\",\r\n                    marginLeft: \"35px\",\r\n                  }}\r\n                >\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordlength ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Minimum 8 characters\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passworduppercase ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Aleast One Uppercase\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordlowercase ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Lowercase\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordnumber ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Number\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordspecial ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Special Character\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"login1\">\r\n            <label htmlFor=\"password\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              required\r\n              ref={confirmpasswordRef}\r\n              onInput={confirmpasswordhandler}\r\n              onClick={passwordconditions}\r\n            />\r\n          </div>\r\n          <div className=\"conditions\">\r\n            {passwordcondition1 ? (\r\n              <div>\r\n                <ul\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    marginTop: \"10px\",\r\n                    marginLeft: \"35px\",\r\n                  }}\r\n                >\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"25px\",\r\n                      color: passwordmatch ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Password Match\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div>\r\n            <button className=\"button1\" type=\"submit\" disabled={!formisValid}>\r\n              Register\r\n            </button>\r\n            <p className=\"lins4\">Already have an account ? </p>\r\n            <NavLink to=\"/login\" style={{ textDecoration: \"none\" }}>\r\n              <p className=\"lin4\">Login</p>\r\n            </NavLink>\r\n          </div>\r\n        </form>\r\n        {Rmessage && <Registermessage click={handler} />}\r\n        {emailisValid && <Emailvalid email={emailHandler} />}\r\n        {wrongregister && (\r\n          <Wrongregister validregister={validregisterHandler} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n\r\n\r\n\r\n\r\n        "]},"metadata":{},"sourceType":"module"}