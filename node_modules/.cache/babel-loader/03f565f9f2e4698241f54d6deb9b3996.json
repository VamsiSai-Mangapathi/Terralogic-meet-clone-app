{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vamsisai-2994\\\\REACT\\\\google-meet-clone\\\\src\\\\components\\\\UserVideo\\\\RegistrationUser.js\",\n  _s = $RefreshSig$();\nimport '../Forms/LoginForm.css';\nimport '../Forms/Registration.css';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport React, { useState, useRef, useEffect } from 'react';\nimport logo1 from '../../assets/image.png';\nimport Registermessage from '../messages/Registermessage';\nimport Emailvalid from '../messages/Emailvalid';\nimport Header from '../Header';\nimport Wrongregister from '../messages/Wrongregister';\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistrationUser(props) {\n  _s();\n  const history = useHistory();\n  const emailRef = useRef();\n  const passwordRef3 = useRef();\n  const usernameref = useRef();\n  const confirmpasswordRef = useRef();\n  const [Rmessage, setRmessage] = useState(false);\n  const [emailisValid, setemailisValid] = useState(false);\n  const [errorregister, seterrorregister] = useState();\n  const [wrongregister, setwrongregister] = useState();\n  const [passwordlength, setpasswordlength] = useState();\n  const [passworduppercase, setpassworduppercase] = useState();\n  const [passwordlowercase, setpasswordlowercase] = useState();\n  const [passwordnumber, setpasswordnumber] = useState();\n  const [passwordmatch, setpasswordmatch] = useState();\n  const [formisValid, setformisValid] = useState(false);\n  const [passwordspecial, setpasswordspecial] = useState();\n  const [passwordcondition, setpasswordcondition] = useState();\n  const [passwordcondition1, setpasswordcondition1] = useState();\n  const handler = () => {\n    setRmessage(false);\n    history.push('/login');\n  };\n  const emailHandler = () => {\n    setemailisValid(false);\n  };\n  const passwordenterhandler3 = () => {\n    const enteredpassword1 = passwordRef3.current.value;\n    if (enteredpassword1.trim().length >= 8) {\n      setpasswordlength(true);\n    } else if (enteredpassword1.trim().length < 8) {\n      setpasswordlength(false);\n    }\n    if (enteredpassword1.match(/[A-Z]/)) {\n      setpassworduppercase(true);\n    } else {\n      setpassworduppercase(false);\n    }\n    if (enteredpassword1.match(/[a-z]/)) {\n      setpasswordlowercase(true);\n    } else {\n      setpasswordlowercase(false);\n    }\n    if (enteredpassword1.match(/[0-9]/)) {\n      setpasswordnumber(true);\n    } else {\n      setpasswordnumber(false);\n    }\n    if (enteredpassword1.match(/[^A-Za-z0-9-' ']/i)) {\n      setpasswordspecial(true);\n    } else {\n      setpasswordspecial(false);\n    }\n  };\n  const confirmpasswordhandler = () => {\n    const confirmpassword = confirmpasswordRef.current.value;\n    const enteredpassword1 = passwordRef3.current.value;\n    if (confirmpassword === enteredpassword1) {\n      setformisValid(true);\n      setpasswordmatch(true);\n    } else {\n      setformisValid(false);\n      setpasswordmatch(false);\n    }\n  };\n  const passwordconditions = () => {\n    setpasswordcondition(false);\n    setpasswordcondition1(true);\n  };\n  const pswdconditions = () => {\n    setpasswordcondition(true);\n    setpasswordcondition1(false);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailRef.current.value;\n    const enteredpassword = passwordRef3.current.value;\n    const enteredUsername = usernameref.current.value;\n    if (enteredEmail.includes(\"@terralogic.com\")) {\n      fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBERMyCRpzcfn_xn0o7_b464pVhJI2Y1RI\",\n      // \"http://127.0.0.1:8000/core/register/\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          username: enteredUsername,\n          email: enteredEmail,\n          password: enteredpassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        if (res.ok) {\n          setRmessage(true);\n        } else {\n          return res.json().then(data => {\n            let errorMessage = \"Authentication failed!\";\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n            setRmessage(false);\n            seterrorregister(errorMessage);\n            if (errorregister === \"EMAIL_EXISTS\") {\n              setwrongregister(true);\n            }\n          });\n        }\n      });\n    } else {\n      setemailisValid(true);\n    }\n  };\n  useEffect(() => {\n    usernameref.current.focus();\n  }, []);\n  const validregisterHandler = () => {\n    setwrongregister(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo1\",\n        src: logo1,\n        alt: \"logo1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainform\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"h5\",\n          children: \"Registration for Terralogic Meet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"User Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"text\",\n            id: \"username\",\n            ref: usernameref\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"email\",\n            id: \"email\",\n            required: true,\n            ref: emailRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            ref: passwordRef3,\n            pattern: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,}$\",\n            onInput: passwordenterhandler3,\n            onClick: pswdconditions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conditions\",\n          children: passwordcondition ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                fontSize: \"14px\",\n                marginTop: \"10px\",\n                marginLeft: \"35px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"20px\",\n                  color: passwordlength ? \"green\" : \"red\"\n                },\n                children: \"Minimum 8 characters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"20px\",\n                  color: passworduppercase ? \"green\" : \"red\"\n                },\n                children: \"Aleast One Uppercase\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"20px\",\n                  color: passwordlowercase ? \"green\" : \"red\"\n                },\n                children: \"Lowercase\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"20px\",\n                  color: passwordnumber ? \"green\" : \"red\"\n                },\n                children: \"Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"20px\",\n                  color: passwordspecial ? \"green\" : \"red\"\n                },\n                children: \"Special Character\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            required: true,\n            ref: confirmpasswordRef,\n            onInput: confirmpasswordhandler,\n            onClick: passwordconditions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conditions\",\n            children: passwordcondition1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  fontSize: \"14px\",\n                  marginTop: \"10px\",\n                  marginLeft: \"35px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  style: {\n                    lineHeight: \"25px\",\n                    color: passwordmatch ? \"green\" : \"red\"\n                  },\n                  children: \"Password Match\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button1\",\n            type: \"submit\",\n            disabled: !formisValid,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lins4\",\n            children: \"Already have an account ? \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/login1\",\n            style: {\n              textDecoration: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"lin4\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), Rmessage && /*#__PURE__*/_jsxDEV(Registermessage, {\n        click: handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 22\n      }, this), emailisValid && /*#__PURE__*/_jsxDEV(Emailvalid, {\n        email: emailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 26\n      }, this), wrongregister && /*#__PURE__*/_jsxDEV(Wrongregister, {\n        validregister: validregisterHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(RegistrationUser, \"y8SlM1gin2KEYwnXl5blN/t4xFg=\", false, function () {\n  return [useHistory];\n});\n_c = RegistrationUser;\n;\nexport default RegistrationUser;\nvar _c;\n$RefreshReg$(_c, \"RegistrationUser\");","map":{"version":3,"names":["NavLink","useHistory","React","useState","useRef","useEffect","logo1","Registermessage","Emailvalid","Header","Wrongregister","DoneOutlineIcon","RegistrationUser","props","history","emailRef","passwordRef3","usernameref","confirmpasswordRef","Rmessage","setRmessage","emailisValid","setemailisValid","errorregister","seterrorregister","wrongregister","setwrongregister","passwordlength","setpasswordlength","passworduppercase","setpassworduppercase","passwordlowercase","setpasswordlowercase","passwordnumber","setpasswordnumber","passwordmatch","setpasswordmatch","formisValid","setformisValid","passwordspecial","setpasswordspecial","passwordcondition","setpasswordcondition","passwordcondition1","setpasswordcondition1","handler","push","emailHandler","passwordenterhandler3","enteredpassword1","current","value","trim","length","match","confirmpasswordhandler","confirmpassword","passwordconditions","pswdconditions","submitHandler","event","preventDefault","enteredEmail","enteredpassword","enteredUsername","includes","fetch","method","body","JSON","stringify","username","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","error","message","focus","validregisterHandler","fontSize","marginTop","marginLeft","lineHeight","color","textDecoration"],"sources":["C:/Users/Vamsisai-2994/REACT/google-meet-clone/src/components/UserVideo/RegistrationUser.js"],"sourcesContent":["import '../Forms/LoginForm.css';\r\nimport '../Forms/Registration.css';\r\nimport {NavLink,useHistory} from 'react-router-dom';\r\nimport React,{useState,useRef,useEffect} from 'react';\r\nimport logo1 from '../../assets/image.png';\r\nimport Registermessage from '../messages/Registermessage'\r\nimport Emailvalid from '../messages/Emailvalid';\r\nimport Header from '../Header';\r\nimport Wrongregister from '../messages/Wrongregister';\r\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\r\n\r\n\r\n\r\n\r\nfunction RegistrationUser(props){\r\n  const history=useHistory();\r\n  const emailRef = useRef();\r\n  const passwordRef3 = useRef();\r\n  const usernameref=useRef();\r\n  const confirmpasswordRef=useRef();\r\n  const [Rmessage,setRmessage]=useState(false);\r\n  const[emailisValid,setemailisValid]=useState(false);\r\n  const[errorregister,seterrorregister]=useState();\r\n  const[wrongregister,setwrongregister]=useState();\r\n  const[passwordlength,setpasswordlength]=useState();\r\n  const[passworduppercase,setpassworduppercase]=useState();\r\n  const[passwordlowercase,setpasswordlowercase]=useState();\r\n  const[passwordnumber,setpasswordnumber]=useState();\r\n  const[passwordmatch,setpasswordmatch]=useState();\r\n  const[formisValid,setformisValid]=useState(false);\r\n  const [passwordspecial, setpasswordspecial] = useState();\r\n  const[passwordcondition,setpasswordcondition]=useState();\r\n  const[passwordcondition1,setpasswordcondition1]=useState();\r\n  \r\n  const handler=()=>{\r\n    setRmessage(false);\r\n    history.push('/login')\r\n  };\r\n\r\n  const emailHandler=()=>{\r\n    setemailisValid(false);\r\n  };\r\n  \r\n  const passwordenterhandler3=()=>{\r\n    const enteredpassword1=passwordRef3.current.value;\r\n      if(enteredpassword1.trim().length>=8){\r\n        setpasswordlength(true);\r\n      }else\r\n      if(enteredpassword1.trim().length<8){setpasswordlength(false)}\r\n      if(enteredpassword1.match(/[A-Z]/)){\r\n        setpassworduppercase(true);\r\n      }\r\n      else {\r\n        setpassworduppercase(false);\r\n      }\r\n      if(enteredpassword1.match(/[a-z]/)){\r\n        setpasswordlowercase(true);\r\n      }\r\n      else{\r\n        setpasswordlowercase(false);\r\n      }\r\n      if(enteredpassword1.match(/[0-9]/)){\r\n        setpasswordnumber(true);\r\n      }\r\n      else{\r\n        setpasswordnumber(false);\r\n      }\r\n      if(enteredpassword1.match(/[^A-Za-z0-9-' ']/i)){\r\n        setpasswordspecial(true);\r\n      }\r\n      else{\r\n        setpasswordspecial(false);\r\n      }\r\n  }\r\n  const confirmpasswordhandler=()=>{\r\n    const confirmpassword=confirmpasswordRef.current.value;\r\n    const enteredpassword1=passwordRef3.current.value;\r\n    if(confirmpassword === enteredpassword1){\r\n      setformisValid(true);\r\n      setpasswordmatch(true);\r\n    }\r\n    else{\r\n      setformisValid(false);\r\n      setpasswordmatch(false);\r\n    }\r\n  }\r\n\r\n  const passwordconditions=()=>{\r\n    setpasswordcondition(false);\r\n    setpasswordcondition1(true);\r\n  }\r\n  const pswdconditions=()=>{\r\n    setpasswordcondition(true);\r\n    setpasswordcondition1(false);\r\n  }\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredEmail = emailRef.current.value;\r\n    const enteredpassword = passwordRef3.current.value;\r\n    const enteredUsername=usernameref.current.value;\r\n\r\n    if(enteredEmail.includes(\"@terralogic.com\")){\r\n      fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBERMyCRpzcfn_xn0o7_b464pVhJI2Y1RI\",\r\n        // \"http://127.0.0.1:8000/core/register/\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            username:enteredUsername,\r\n            email: enteredEmail,\r\n            password: enteredpassword,\r\n            returnSecureToken: true,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      ).then((res) => {\r\n        if (res.ok) {\r\n          setRmessage(true);\r\n        } else {\r\n          return res.json().then((data) => {\r\n            let errorMessage = \"Authentication failed!\";\r\n            if (data && data.error && data.error.message) {\r\n              errorMessage = data.error.message;\r\n            }\r\n            setRmessage(false);\r\n            seterrorregister(errorMessage);\r\n            if(errorregister === \"EMAIL_EXISTS\"){\r\n              setwrongregister(true);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }else{\r\n      setemailisValid(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    usernameref.current.focus();\r\n  }, []);\r\n\r\n  const validregisterHandler=()=>{\r\n    setwrongregister(false);\r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div>{<img className=\"logo1\" src={logo1} alt=\"logo1\" />}</div>\r\n      <div className=\"mainform\">\r\n        <form onSubmit={submitHandler}>\r\n          <h5 className=\"h5\">Registration for Terralogic Meet</h5>\r\n          <div className=\"login\">\r\n            <label htmlFor=\"text\">User Name</label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              id=\"username\"\r\n              ref={usernameref}\r\n            />\r\n          </div>\r\n          <div className=\"login\">\r\n            <label htmlFor=\"email\">Email Id</label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              required\r\n              ref={emailRef}\r\n            />\r\n          </div>\r\n          <div className=\"login1\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              required\r\n              ref={passwordRef3}\r\n              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,}$\"\r\n              onInput={passwordenterhandler3}\r\n              onClick={pswdconditions}\r\n            />\r\n          </div>\r\n          <div className=\"conditions\">\r\n            {passwordcondition ? (\r\n              <div>\r\n                <ul\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    marginTop: \"10px\",\r\n                    marginLeft: \"35px\",\r\n                  }}\r\n                >\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordlength ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Minimum 8 characters\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passworduppercase ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Aleast One Uppercase\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordlowercase ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Lowercase\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordnumber ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Number\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"20px\",\r\n                      color: passwordspecial ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Special Character\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"login1\">\r\n            <label htmlFor=\"password\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              required\r\n              ref={confirmpasswordRef}\r\n              onInput={confirmpasswordhandler}\r\n              onClick={passwordconditions}\r\n            />\r\n            <div className=\"conditions\">\r\n            {passwordcondition1 ? (\r\n              <div>\r\n                <ul\r\n                  style={{\r\n                    fontSize: \"14px\",\r\n                    marginTop: \"10px\",\r\n                    marginLeft: \"35px\",\r\n                  }}\r\n                >\r\n                  <li\r\n                    style={{\r\n                      lineHeight: \"25px\",\r\n                      color: passwordmatch ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    Password Match\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          </div>\r\n          <div>\r\n            <button className=\"button1\" type=\"submit\" disabled={!formisValid}>\r\n              Register\r\n            </button>\r\n            <p className=\"lins4\">Already have an account ? </p>\r\n            <NavLink to=\"/login1\" style={{ textDecoration: \"none\" }}>\r\n              <p className=\"lin4\">Login</p>\r\n            </NavLink>\r\n          </div>\r\n        </form>\r\n        {Rmessage && <Registermessage click={handler} />}\r\n        {emailisValid && <Emailvalid email={emailHandler} />}\r\n        {wrongregister && (\r\n          <Wrongregister validregister={validregisterHandler} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationUser;\r\n\r\n\r\n\r\n\r\n        "],"mappings":"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"},"metadata":{},"sourceType":"module"}