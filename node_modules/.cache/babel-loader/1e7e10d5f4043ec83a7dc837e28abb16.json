{"ast":null,"code":"import _objectSpread from\"C:/Users/Vamsisai-2994/REACT/google-meet-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{SET_MAIN_STREAM,ADD_PARTICIPANT,SET_USER,REMOVE_PARTICIPANT,UPDATE_USER,UPDATE_PARTICIPANT}from\"./actiontypes\";import{createOffer,initializeListensers,updatePreference}from\"../server/peerConnection\";var defaultUserState={mainStream:null,participants:{},currentUser:null};var servers={iceServers:[{urls:[\"stun:stun1.l.google.com:19302\",\"stun:stun2.l.google.com:19302\",\"stun:stun.l.google.com:19302\",\"stun:stun3.l.google.com:19302\",\"stun:stun4.l.google.com:19302\",\"stun:stun.services.mozilla.com\"]}],iceCandidatePoolSize:10};var generateColor=function generateColor(){return\"#\"+Math.floor(Math.random()*16777215).toString(16);};export var userReducer=function userReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultUserState;var action=arguments.length>1?arguments[1]:undefined;if(action.type===SET_MAIN_STREAM){var payload=action.payload;state=_objectSpread(_objectSpread({},state),payload);return state;}else if(action.type===ADD_PARTICIPANT){var _payload=action.payload;var currentUserId=Object.keys(state.currentUser)[0];var newUserId=Object.keys(_payload.newUser)[0];if(state.mainStream&&currentUserId!==newUserId){_payload.newUser=addConnection(_payload.newUser,state.currentUser,state.mainStream);}if(currentUserId===newUserId)_payload.newUser[newUserId].currentUser=true;_payload.newUser[newUserId].avatarColor=generateColor();var participants=_objectSpread(_objectSpread({},state.participants),_payload.newUser);state=_objectSpread(_objectSpread({},state),{},{participants:participants});return state;}else if(action.type===SET_USER){var _payload2=action.payload;var _participants=_objectSpread({},state.participants);var userId=Object.keys(_payload2.currentUser)[0];_payload2.currentUser[userId].avatarColor=generateColor();initializeListensers(userId);state=_objectSpread(_objectSpread({},state),{},{currentUser:_objectSpread({},_payload2.currentUser),participants:_participants});return state;}else if(action.type===REMOVE_PARTICIPANT){var _payload3=action.payload;var _participants2=_objectSpread({},state.participants);delete _participants2[_payload3.id];state=_objectSpread(_objectSpread({},state),{},{participants:_participants2});return state;}else if(action.type===UPDATE_USER){var _payload4=action.payload;var _userId=Object.keys(state.currentUser)[0];updatePreference(_userId,_payload4.currentUser);state.currentUser[_userId]=_objectSpread(_objectSpread({},state.currentUser[_userId]),_payload4.currentUser);state=_objectSpread(_objectSpread({},state),{},{currentUser:_objectSpread({},state.currentUser)});return state;}else if(action.type===UPDATE_PARTICIPANT){var _payload5=action.payload;var _newUserId=Object.keys(_payload5.newUser)[0];_payload5.newUser[_newUserId]=_objectSpread(_objectSpread({},state.participants[_newUserId]),_payload5.newUser[_newUserId]);var _participants3=_objectSpread(_objectSpread({},state.participants),_payload5.newUser);state=_objectSpread(_objectSpread({},state),{},{participants:_participants3});return state;}return state;};var addConnection=function addConnection(newUser,currentUser,stream){var peerConnection=new RTCPeerConnection(servers);stream.getTracks().forEach(function(track){peerConnection.addTrack(track,stream);});var newUserId=Object.keys(newUser)[0];var currentUserId=Object.keys(currentUser)[0];var offerIds=[newUserId,currentUserId].sort(function(a,b){return a.localeCompare(b);});newUser[newUserId].peerConnection=peerConnection;if(offerIds[0]!==currentUserId)createOffer(peerConnection,offerIds[0],offerIds[1]);return newUser;};","map":{"version":3,"names":["SET_MAIN_STREAM","ADD_PARTICIPANT","SET_USER","REMOVE_PARTICIPANT","UPDATE_USER","UPDATE_PARTICIPANT","createOffer","initializeListensers","updatePreference","defaultUserState","mainStream","participants","currentUser","servers","iceServers","urls","iceCandidatePoolSize","generateColor","Math","floor","random","toString","userReducer","state","action","type","payload","currentUserId","Object","keys","newUserId","newUser","addConnection","avatarColor","userId","id","stream","peerConnection","RTCPeerConnection","getTracks","forEach","track","addTrack","offerIds","sort","a","b","localeCompare"],"sources":["C:/Users/Vamsisai-2994/REACT/google-meet-clone/src/store/reducer.js"],"sourcesContent":["import {\r\n  SET_MAIN_STREAM,\r\n  ADD_PARTICIPANT,\r\n  SET_USER,\r\n  REMOVE_PARTICIPANT,\r\n  UPDATE_USER,\r\n  UPDATE_PARTICIPANT,\r\n} from \"./actiontypes\";\r\n\r\nimport {\r\n  createOffer,\r\n  initializeListensers,\r\n  updatePreference,\r\n} from \"../server/peerConnection\";\r\n\r\nlet defaultUserState = {\r\n  mainStream: null,\r\n  participants: {},\r\n  currentUser: null,\r\n};\r\n\r\nconst servers = {\r\n  iceServers: [\r\n    {\r\n      urls: [\r\n        \"stun:stun1.l.google.com:19302\",\r\n        \"stun:stun2.l.google.com:19302\",\r\n        \"stun:stun.l.google.com:19302\",\r\n        \"stun:stun3.l.google.com:19302\",\r\n        \"stun:stun4.l.google.com:19302\",\r\n        \"stun:stun.services.mozilla.com\",\r\n      ],\r\n    },\r\n  ],\r\n  iceCandidatePoolSize: 10,\r\n};\r\n\r\nconst generateColor = () =>\r\n  \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n\r\nexport const userReducer = (state = defaultUserState, action) => {\r\n  if (action.type === SET_MAIN_STREAM) {\r\n    let payload = action.payload;\r\n    state = { ...state, ...payload };\r\n    return state;\r\n  } else if (action.type === ADD_PARTICIPANT) {\r\n    let payload = action.payload;\r\n    const currentUserId = Object.keys(state.currentUser)[0];\r\n    const newUserId = Object.keys(payload.newUser)[0];\r\n    if (state.mainStream && currentUserId !== newUserId) {\r\n      payload.newUser = addConnection(\r\n        payload.newUser,\r\n        state.currentUser,\r\n        state.mainStream\r\n      );\r\n    }\r\n\r\n    if (currentUserId === newUserId)\r\n      payload.newUser[newUserId].currentUser = true;\r\n    payload.newUser[newUserId].avatarColor = generateColor();\r\n    let participants = { ...state.participants, ...payload.newUser };\r\n    state = { ...state, participants };\r\n    return state;\r\n  } else if (action.type === SET_USER) {\r\n    let payload = action.payload;\r\n    let participants = { ...state.participants };\r\n    const userId = Object.keys(payload.currentUser)[0];\r\n    payload.currentUser[userId].avatarColor = generateColor();\r\n    initializeListensers(userId);\r\n    state = { ...state, currentUser: { ...payload.currentUser }, participants };\r\n    return state;\r\n  } else if (action.type === REMOVE_PARTICIPANT) {\r\n    let payload = action.payload;\r\n    let participants = { ...state.participants };\r\n    delete participants[payload.id];\r\n    state = { ...state, participants };\r\n    return state;\r\n  } else if (action.type === UPDATE_USER) {\r\n    let payload = action.payload;\r\n    const userId = Object.keys(state.currentUser)[0];\r\n    updatePreference(userId, payload.currentUser);\r\n    state.currentUser[userId] = {\r\n      ...state.currentUser[userId],\r\n      ...payload.currentUser,\r\n    };\r\n    state = {\r\n      ...state,\r\n      currentUser: { ...state.currentUser },\r\n    };\r\n    return state;\r\n  } else if (action.type === UPDATE_PARTICIPANT) {\r\n    let payload = action.payload;\r\n    const newUserId = Object.keys(payload.newUser)[0];\r\n\r\n    payload.newUser[newUserId] = {\r\n      ...state.participants[newUserId],\r\n      ...payload.newUser[newUserId],\r\n    };\r\n    let participants = { ...state.participants, ...payload.newUser };\r\n    state = { ...state, participants };\r\n    return state;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst addConnection = (newUser, currentUser, stream) => {\r\n  const peerConnection = new RTCPeerConnection(servers);\r\n  stream.getTracks().forEach((track) => {\r\n    peerConnection.addTrack(track, stream);\r\n  });\r\n  const newUserId = Object.keys(newUser)[0];\r\n  const currentUserId = Object.keys(currentUser)[0];\r\n\r\n  const offerIds = [newUserId, currentUserId].sort((a, b) =>\r\n    a.localeCompare(b)\r\n  );\r\n\r\n  newUser[newUserId].peerConnection = peerConnection;\r\n  if (offerIds[0] !== currentUserId)\r\n    createOffer(peerConnection, offerIds[0], offerIds[1]);\r\n  return newUser;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}