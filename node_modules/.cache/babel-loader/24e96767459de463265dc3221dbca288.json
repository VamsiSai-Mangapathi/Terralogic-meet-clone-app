{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vamsisai-2994\\\\REACT\\\\google-meet-clone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Adminpage from './components/UserVideo/Adminpage';\nimport Registration from './components/Forms/Registration';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport React from 'react';\nimport Home from './components/Kyathi/Home';\nimport Mainform from './components/Forms/Mainform';\nimport firepadRef, { db, userName } from \"./server/firebase\";\nimport \"./App.css\";\nimport { useEffect } from \"react\";\nimport { setMainStream, addParticipant, setUser, removeParticipant, updateParticipant } from \"./store/actioncreator\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const getUserStream = async () => {\n    const localStream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    });\n    return localStream;\n  };\n\n  useEffect(async () => {\n    const stream = await getUserStream();\n    stream.getVideoTracks()[0].enabled = false;\n    props.setMainStream(stream);\n    connectedRef.on(\"value\", snap => {\n      if (snap.val()) {\n        const defaultPreference = {\n          audio: true,\n          video: false,\n          screen: false\n        };\n        const userStatusRef = participantRef.push({\n          userName,\n          preferences: defaultPreference\n        });\n        props.setUser({\n          [userStatusRef.key]: {\n            name: userName,\n            ...defaultPreference\n          }\n        });\n        userStatusRef.onDisconnect().remove();\n      }\n    });\n  }, []);\n  const connectedRef = db.database().ref(\".info/connected\");\n  const participantRef = firepadRef.child(\"participants\");\n  const isUserSet = !!props.user;\n  const isStreamSet = !!props.stream;\n  useEffect(() => {\n    if (isStreamSet && isUserSet) {\n      participantRef.on(\"child_added\", snap => {\n        const preferenceUpdateEvent = participantRef.child(snap.key).child(\"preferences\");\n        preferenceUpdateEvent.on(\"child_changed\", preferenceSnap => {\n          props.updateParticipant({\n            [snap.key]: {\n              [preferenceSnap.key]: preferenceSnap.val()\n            }\n          });\n        });\n        const {\n          userName: name,\n          preferences = {}\n        } = snap.val();\n        props.addParticipant({\n          [snap.key]: {\n            name,\n            ...preferences\n          }\n        });\n      });\n      participantRef.on(\"child_removed\", snap => {\n        props.removeParticipant(snap.key);\n      });\n    }\n  }, [isStreamSet, isUserSet]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(Mainform, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Registration\",\n          children: /*#__PURE__*/_jsxDEV(Registration, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/after\",\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/main\",\n          children: /*#__PURE__*/_jsxDEV(Adminpage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    stream: state.mainStream,\n    user: state.currentUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMainStream: stream => dispatch(setMainStream(stream)),\n    addParticipant: user => dispatch(addParticipant(user)),\n    setUser: user => dispatch(setUser(user)),\n    removeParticipant: userId => dispatch(removeParticipant(userId)),\n    updateParticipant: user => dispatch(updateParticipant(user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Vamsisai-2994/REACT/google-meet-clone/src/App.js"],"names":["Adminpage","Registration","Route","Redirect","Switch","React","Home","Mainform","firepadRef","db","userName","useEffect","setMainStream","addParticipant","setUser","removeParticipant","updateParticipant","connect","App","props","getUserStream","localStream","navigator","mediaDevices","getUserMedia","audio","video","stream","getVideoTracks","enabled","connectedRef","on","snap","val","defaultPreference","screen","userStatusRef","participantRef","push","preferences","key","name","onDisconnect","remove","database","ref","child","isUserSet","user","isStreamSet","preferenceUpdateEvent","preferenceSnap","mapStateToProps","state","mainStream","currentUser","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import Adminpage from './components/UserVideo/Adminpage';\r\nimport Registration from './components/Forms/Registration';\r\nimport {Route,Redirect,Switch} from 'react-router-dom';\r\nimport React from 'react';\r\nimport Home from './components/Kyathi/Home';\r\nimport Mainform from './components/Forms/Mainform';\r\nimport firepadRef, { db, userName } from \"./server/firebase\";\r\nimport \"./App.css\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  setMainStream,\r\n  addParticipant,\r\n  setUser,\r\n  removeParticipant,\r\n  updateParticipant,\r\n} from \"./store/actioncreator\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction App(props) {\r\n  const getUserStream = async () => {\r\n    const localStream = await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n      video: true,\r\n    });\r\n\r\n    return localStream;\r\n  };\r\n  useEffect(async () => {\r\n    const stream = await getUserStream();\r\n    stream.getVideoTracks()[0].enabled = false;\r\n    props.setMainStream(stream);\r\n\r\n    connectedRef.on(\"value\", (snap) => {\r\n      if (snap.val()) {\r\n        const defaultPreference = {\r\n          audio: true,\r\n          video: false,\r\n          screen: false,\r\n        };\r\n        const userStatusRef = participantRef.push({\r\n          userName,\r\n          preferences: defaultPreference,\r\n        });\r\n        props.setUser({\r\n          [userStatusRef.key]: { name: userName, ...defaultPreference },\r\n        });\r\n        userStatusRef.onDisconnect().remove();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const connectedRef = db.database().ref(\".info/connected\");\r\n  const participantRef = firepadRef.child(\"participants\");\r\n\r\n  const isUserSet = !!props.user;\r\n  const isStreamSet = !!props.stream;\r\n\r\n  useEffect(() => {\r\n    if (isStreamSet && isUserSet) {\r\n      participantRef.on(\"child_added\", (snap) => {\r\n        const preferenceUpdateEvent = participantRef\r\n          .child(snap.key)\r\n          .child(\"preferences\");\r\n        preferenceUpdateEvent.on(\"child_changed\", (preferenceSnap) => {\r\n          props.updateParticipant({\r\n            [snap.key]: {\r\n              [preferenceSnap.key]: preferenceSnap.val(),\r\n            },\r\n          });\r\n        });\r\n        const { userName: name, preferences = {} } = snap.val();\r\n        props.addParticipant({\r\n          [snap.key]: {\r\n            name,\r\n            ...preferences,\r\n          },\r\n        });\r\n      });\r\n      participantRef.on(\"child_removed\", (snap) => {\r\n        props.removeParticipant(snap.key);\r\n      });\r\n    }\r\n  }, [isStreamSet, isUserSet]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Route>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Redirect to=\"/login\" />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Mainform />\r\n        </Route>\r\n        <Route path=\"/Registration\">\r\n          <Registration />\r\n        </Route>\r\n        <Route path=\"/after\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/main\">\r\n          <Adminpage />\r\n        </Route>\r\n      </Switch>\r\n    </Route>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stream: state.mainStream,\r\n    user: state.currentUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setMainStream: (stream) => dispatch(setMainStream(stream)),\r\n    addParticipant: (user) => dispatch(addParticipant(user)),\r\n    setUser: (user) => dispatch(setUser(user)),\r\n    removeParticipant: (userId) => dispatch(removeParticipant(userId)),\r\n    updateParticipant: (user) => dispatch(updateParticipant(user)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}